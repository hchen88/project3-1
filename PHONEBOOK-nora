package edu.project3;

import java.util.TreeMap;

public class PhoneBook {
	/**
	 * creates a phone book that stores all of the contacts
	 */
	private static TreeMap<String, Contact> phoneBookMap = new TreeMap<String, Contact>();
	
	
	/**
	 * creates a new phone book
	 */
	public PhoneBook() {
		
	}
	
	/**
	 * returns a contact if in the phone book
	 * @param contactName
	 * @return
	 */
	public Contact getContact(String contactName) {
		return phoneBookMap.get(contactName);
	}

	/**
	 * adds a new element to phoneBookMap with the key as a 
	 * string and the value as an object.
	 * @param contactName
	 * @param contactObj
	 */
	public void addContact(String contactName, Contact contactObj   ) {
		
		phoneBookMap.put(contactName, contactObj);
		
	}
	
	/**
	 * deletes the element with a specific contact name.
	 * @param contactName
	 */
	public void delContact(String contactName) {
		phoneBookMap.remove(contactName);
		
	}
	
	/**
	 * returns true if the contact is in the phone book
	 * @param contactName
	 * @return
	 */
	public boolean checkPhonebook(String contactName) {
		
		boolean found = false;
		for( String key : phoneBookMap.keySet()) {
			if (contactName.equals(key)) {
				found = true;
			}
		}
		return found;
	}
	
	/**
	 * returns the contact if found in the phone book searched using name
	 * @param contactName
	 * @return
	 */
	public Contact checkPhonebookContact(String contactName) {
		Contact contact = null; 
		for( String key : phoneBookMap.keySet()) {
			if (contactName.equals(key)) {
				contact = phoneBookMap.get(key);
			}
		}
		return contact;
	}
	
	/**
	 * returns the contact if found in the phone book searched using number
	 * @param contactName
	 * @return
	 */
	public Contact checkNumPhonebook(String number) {
		Contact contact = null;
		for (String key : phoneBookMap.keySet()) {
			if (number.equals(phoneBookMap.get(key).getNum())) {
				contact = phoneBookMap.get(key);
			}
		}
		return contact;
	}
	
	/**
	 * formats the call log
	 * @return
	 */
	public String callLog() {
		String str = "";
        for(String key: phoneBookMap.keySet()){
        		if (phoneBookMap.get(key) != null) {
        			if(phoneBookMap.get(key).getTotalCalls() > 0) {
        				str += phoneBookMap.get(key).formatCall();
        			}
        		}
        }
        if (str.isEmpty()) {
        	 str = "There are no calls";
        }
		return str;
	}
	
	/**
	 * formats the detailed call log
	 * @return
	 */
	public String detailedCallLog() {
		String str = "";
        for(String key: phoneBookMap.keySet()){
        		if (phoneBookMap.get(key) != null) {
        			if(phoneBookMap.get(key).getTotalCalls() > 0) {
        				str += phoneBookMap.get(key).formatDetailedCall();
        			}
        		}
        }
		return str;
	}
	
	/**
	 * formats and returns the toString
	 */
	public String toString() {
		String str = "";
        for(String key: phoneBookMap.keySet()){
    		if (phoneBookMap.get(key) != null) {
    			if (!phoneBookMap.get(key).getName().equals("N/A")) {
    				str += phoneBookMap.get(key) + "\n";
    				}
    			}
        }
        if (str.isEmpty()) { 
        		str = "No Phonebook";
        }
        return str;
	}
}
