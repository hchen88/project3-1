package edu.project3;

import java.util.Scanner;

public class CellphoneTester {

	public static String mainMenu() {
		//FORMATS AND DISPLAYS CALL LOG
		String mainMenu = "	---Main Menu--- \n1. Receive A Call \n2. Make A Call \n3. Modify Phonebook \n4. Display Phonebook \n5. Preset Favorites \n"
				+ "6. Display Call Log \n7. Quit "; 
		return mainMenu;
	}
	
	public static void main(String[] args) {
		//CREATES NEW SCANNER, PHONEBOOK, AND PRESET LIST
		Scanner in = new Scanner(System.in);
		String userInput; 
		PhoneBook phoneBook = new PhoneBook();
		PresetList presetList = new PresetList();
		int unknownCounter = 0;
		
		//DO WHILE LOOP THAT RUNS UNTIL USER QUITS
		do {
			System.out.println(mainMenu()); 
			userInput = in.nextLine().trim(); 
			if (userInput.equals("1")) {
				//RECEIVES A CALL
				String incomingNum = "5628659087";
				System.out.println("Receiving a call from " + incomingNum);
				if (phoneBook.checkNumPhonebook(incomingNum) == null) {
					phoneBook.addContact("incomingCall", new Contact(null, "5628659087", null, null, 0, 1));
				}
				else {
					phoneBook.checkNumPhonebook(incomingNum).receiveCall();
					phoneBook.checkNumPhonebook(incomingNum).setTimeStamp();
				}
			}
			else if (userInput.equals("2")) {
				//MAKES A CALL
				System.out.println("Choose an option: \n1. By using phone number. \n2. By using contact. \n3. By using preset favorite.");
				String callInput = in.nextLine().trim();
				if (callInput.equals("1")) {
					//MAKES CALL BY USING PHONE NUMBER
					System.out.println("Enter a seven or ten digit phone number:");
					String phoneNumber = in.nextLine().trim();
					if (phoneBook.checkNumPhonebook(phoneNumber) == null) {
						unknownCounter++;
						String unknownName = Integer.toString(unknownCounter);
						phoneBook.addContact(unknownName, new Contact(null, phoneNumber, null, null, 1, 0));
						System.out.println("Making call to:" + phoneBook.checkNumPhonebook(phoneNumber).formatNum());
					}
					else {
						if (phoneBook.checkNumPhonebook(phoneNumber).getName().equals("N/A")) {
							System.out.println("Making call to:" + phoneBook.checkNumPhonebook(phoneNumber).formatNum());
							phoneBook.checkNumPhonebook(phoneNumber).makeCall();
						}
						else {
							System.out.println("Contact matching number found! \n Making Call to " + phoneBook.checkNumPhonebook(phoneNumber).getName());
							phoneBook.checkNumPhonebook(phoneNumber).makeCall();
						}
					}
				}
				else if (callInput.equals("2")) { 
					//MAKES CALL BY USING CONTACT
					String option;
					do { 
						System.out.println("Enter a contact name:");
						String contactName = in.nextLine().trim();
						if (phoneBook.checkPhonebookContact(contactName) == null) {
							System.out.println("Contact is not in phonebook: \n1. Enter a name again. \n2. Go to main menu.");
							option = in.nextLine().trim();
						} 
						else {
							System.out.println(phoneBook.getContact(contactName));
							System.out.println("Would you like to call " + phoneBook.getContact(contactName).getName() + "?\n1. Yes \n2. No");
							String call = in.nextLine().trim();
							if (call.equals("1")) { 
								phoneBook.getContact(contactName).makeCall();
								System.out.println("Making call to " +  contactName);
							}
							option = "2"; 
						}
					}while (!option.equals("2"));
				}
				else if(callInput.equals("3")) { 
					//MAKES A CALL USING PRESETS
					System.out.println(presetList);
					System.out.println("Enter a preset number:");
					int presetNum = in.nextInt();
					if (presetList.getPreset(presetNum) == null) {
						System.out.println("Sorry there is no preset favorite for that number");
					}
					else {
						presetList.getPreset(presetNum).makeCall();
						System.out.println("Making call to " + presetList.getPreset(presetNum).getName());
					}
				}
			}
			else if (userInput.equals("3")) {
				//MODIFIES PHONE BOOK
				System.out.println("Would you like to: \n1. Add a Contact \n2. Edit a Contact \n3. Delete a Contact \n4. Display a Contact");
				String option = in.nextLine().trim();
				if (option.equals("1")) {
					//ADDS A NEW CONTACT
					System.out.println("Enter the name of the contact:");
					String contactName = in.nextLine().trim();
					System.out.println("Enter the phone number:");
					String phoneNumber = in.nextLine().trim();
					System.out.println("Enter email:");
					String email = in.nextLine().trim();
					System.out.println("Enter any notes:");
					String notes = in.nextLine().trim();
					phoneBook.addContact(contactName, new Contact(contactName, phoneNumber, email, notes, 0, 0));
					System.out.println("New contact added.");
				}
				else if (option.equals("2")) {
					//EDITS A CONTACT
					System.out.println("Enter the name of the contact to be edited:");
					String contactName = in.nextLine().trim();
					if (phoneBook.checkPhonebookContact(contactName) == null) {
						System.out.println("This contact is not in the phonebook.");
					}
					else {
						System.out.println("Enter a new name for the contact:");
						String newName = in.nextLine().trim();
						phoneBook.getContact(contactName).editName(newName);
						System.out.println("Enter a new phone number for the contact:");
						String newNumber = in.nextLine().trim();
						phoneBook.getContact(contactName).editNumber(newNumber);
						System.out.println("Enter a new email for the contact:");
						String newEmail = in.nextLine().trim();
						phoneBook.getContact(contactName).editEmail(newEmail);
						System.out.println("Enter any new notes:");
						String newNotes = in.nextLine().trim();
						phoneBook.getContact(contactName).editNotes(newNotes);
						System.out.println("Contact editted.");
					}
				}
				else if (option.equals("3")) {
					//DELETES A CONTACT
					System.out.println("Enter the name of the contact to be deleted:");
					String name = in.nextLine().trim();
					boolean found = phoneBook.checkPhonebook(name);
					if (found) {
						phoneBook.delContact(name);
						System.out.println("Contact deleted.");
					}
					else {
						System.out.println("This contact is already not in the phonebook.");
					}
				}
				else if (option.equals("4")) {
					//DISPLAYS A CONTACT
					System.out.println("Enter contact name to display:");
					String contactName = in.nextLine().trim();
					if (phoneBook.checkPhonebookContact(contactName) == null) {
						System.out.println("Contact not in phonebook.");
					}
					else {
						System.out.println(phoneBook.checkPhonebookContact(contactName));
					}
				}
			}
			else if (userInput.equals("4")) {
				//DISPLAYS CONTACTS IN PHONEBOOK
				System.out.println("Your Phonebook:\n");
				System.out.println(phoneBook);
			}
			else if (userInput.equals("5")) {
				//MODIFIES PRESETS
				System.out.println("Would you like to: \n1. Display your Presets \n2. Add a Preset \n3. Delete a Preset \n4. Rearrange the Presets");
				String option = in.nextLine().trim();
				if(option.equals("1")) {
					//DISPLAY PRESETS
					System.out.println(presetList);
				}else if(option.equals("2")) {
					//ADD PRESET
					System.out.println("Enter contact you would like to preset: ");
					String contact = in.nextLine().trim();
					if(phoneBook.checkPhonebookContact(contact) == null) {
						System.out.println("Contact doesn't exist in the phonebook.");
					}
					else {
						System.out.println("Enter preset number (1-5): ");
						int presetNum = in.nextInt();
						presetList.addPreset(presetNum, phoneBook.checkPhonebookContact(contact));
						System.out.println("Preset added.");
					}
				}else if(option.equals("3")) {
					//DELETE PRESET
					System.out.println("Enter preset number you would like to delete:");
					int presetNum = in.nextInt();
					presetList.deletePreset(presetNum);
					System.out.println("Preset deleted");
				}else if(option.equals("4")) {
					//REARRANGE PRESETS
					System.out.println("You will enter 2 preset numbers to swap the order.");
					System.out.println("Enter first preset number:");
					int presetNum1 = in.nextInt();
					System.out.println("Enter second preset number:");
					int presetNum2 = in.nextInt();
					presetList.rearrangePreset(presetNum1, presetNum2);
					System.out.println("Presets rearranged.");
					System.out.println(presetList);
				}
			}
			else if (userInput.equals("6")) {
				// DISPLAY CALL LOG
				System.out.println(phoneBook.callLog());
				System.out.println("Enter 1 if you would like to see more details of the call log.\nIf not, then enter anything else to go back to the main menu.");
				String option = in.nextLine().trim();
				if(option.equals("1")) {
					System.out.println(phoneBook.detailedCallLog());
				}
			}
		}while (!userInput.equals("7")); 
		System.out.println("Goodbye.");
		in.close();
	}
}
